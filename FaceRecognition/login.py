
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox, Toplevel
import hashlib
import settings
from admin import AdminGui
from PIL import Image, ImageTk
import attendance

OUTPUT_PATH = Path(__file__).parent
#ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\20307975\Desktop\opencv_project\login\build\assets\frame0")
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\20307975\Desktop\opencv_project\assets\frame0") //change path accordingly

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1440x1024")
window.configure(bg = "#C5F1FF")
class Login:
    def __init__(self, master):
        self.master = master
        self.master.geometry("1440x1024")
        self.master.configure(bg = "#C5F1FF")
        self.master.resizable(False, False)

        self.canvas = Canvas(
            self.master,
            bg="#C5F1FF",
            height=1024,
            width=1440,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        self.canvas.place(x=0, y=0)
        self.canvas.create_rectangle(
            409.0,
            31.0,
            1097.0,
            992.0,
            fill="#76C6F2",
            outline="")

        self.image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
        self.image_1 = self.canvas.create_image(
            752.0,
            126.0,
            image=self.image_image_1
        )

        self.canvas.create_text(
            655.0,
            206.0,
            anchor="nw",
            text="LOGIN",
            fill="#000000",
            font=("Inter", 64 * -1)
        )

        self.entry_image_1 = PhotoImage(file=relative_to_assets("entry_1.png"))
        self.entry_bg_1 = self.canvas.create_image(
            751.5,
            435.5,
            image=self.entry_image_1
        )
        self.entry_1 = Entry(
            self.master,
            bd=0,
            bg="#E5E3E3",
            font=("Arial", 20), # set the font to Arial, size 20
            fg="#000716",
            highlightthickness=0
        )
        self.entry_1.place(
            x=591.0,
            y=394.0,
            width=321.0,
            height=81.0
        )

        self.entry_image_2 = PhotoImage(file=relative_to_assets("entry_2.png"))
        self.entry_bg_2 = self.canvas.create_image(
            751.5,
            652.5,
            image=self.entry_image_2
        )
        self.entry_2 = Entry(
            self.master,
            bd=0,
            font=("Arial", 20), # set the font to Arial, size 20
            bg="#E5E4E4",
            show = '*',
            fg="#000716",
            highlightthickness=0
        )
        self.entry_2.place(
            x=591.0,
            y=611.0,
            width=321.0,
            height=81.0
        )

        self.canvas.create_text(
            674.0,
            322.0,
            anchor="nw",
            text="Username",
            fill="#000000",
            font=("Inter", 32 * -1)
        )

        self.canvas.create_text(
            678.0,
            540.0,
            anchor="nw",
            text="Password",
            fill="#000000",
            font=("Inter", 32 * -1)
        )
       
        self.button_image_1 = PhotoImage(file=relative_to_assets("enter.png"))
        self.button_1 = Button(
            self.master,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command= self.login,
            relief="flat"
        )
        self.button_1.place(
            x=605.0,
            y=785.0,
            width=279.0,
            height=181.0
        )
        self.master.mainloop()
    def login(self):
             # Get the entered username and password from the GUI entry fields
            entered_username= self.entry_1.get()
            entered_password=self.entry_2.get()
            mycursor = settings.mydb.cursor()
            # Get a database cursor and execute a query to get the password and salt for the entered username
            query = "SELECT password, salt FROM user WHERE username = %s"
            values = (entered_username,)
            mycursor.execute(query, values)
            result = mycursor.fetchone()
            if result: # If a result was found, compare the entered password hash with the stored password hash
                stored_password = result[0]
                stored_salt = result[1]
                entered_password_hash = hashlib.pbkdf2_hmac('sha256', entered_password.encode('utf-8'), bytes.fromhex(stored_salt), 100000)

                if entered_password_hash.hex() == stored_password:
                    query = "SELECT user_id FROM user WHERE username = %s"
                    values = (entered_username,)
                    mycursor.execute(query, values)
                    result = mycursor.fetchall()[0][0]
                    print(result)
                    if result == 1:         # If the passwords match, check if the user is an admin or teacher                
                        messagebox.showinfo("Login Successful", "You have logged in as admin")#admin login
                        
                        #admin_window = Tk()
                        # create an instance of the AddStudentGUI class
                        admin_window = AdminGui(window)
                        # call the update method to ensure that the GUI window is fully initialized and displayed
                        self.master.update()
                    else:            
                        messagebox.showinfo("Login Successful", "You have logged in as teacher")#Teacher Login
                        teacher_window = attendance.AttendanceCheck(window)
                        self.master.update()
                else:
                
                    messagebox.showinfo("Login Incorrect", "Password Incorrect")
            else:

                messagebox.showinfo("Login Incorrect", "Username not found")
            self.entry_1.delete("0", "end")#delete entries
            self.entry_2.delete("0", "end")
            

        
   

login = Login(window)
window.mainloop()
